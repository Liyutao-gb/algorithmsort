Leetcode  53  最大子序和
42.最大子序和（Maximum Subarray）
  输入一个整型数组，数组里有正数也有负数。数组中一个或连续的多个整数组成
一个子数组。求所有子数组的和的最大值。要求时间复杂度为O(n)。

分析规律，从第一个数字开始累加，若走到某一个数字时，前面的累加和为负数，
说明不能继续累加了，要从当前数字重新开始累加。在累加过程中，将每次累加和的
最大值记录下来，遍历完成后，返回该数字。
     时间复杂度：O(n)
	
代码如下：
package dynamicprogram;

public class Main0053MaximumSubarray {
	public static void main(String[] args) {
		System.out.println(new Solution53().maxSubArray(new int[] { -2, 1, -3, 4, -1, 2, 1, -5, 4 }));
	}
}

class Solution53 {
	public int maxSubArray(int[] nums) {
		int sum = 0;
		int ans = nums[0];
		for (int i = 0; i < nums.length; i++) {
			if (sum > 0)
				sum += nums[i];
			else
				sum = nums[i];
			ans = Math.max(ans, sum);
		}
		return ans;
	}
}
