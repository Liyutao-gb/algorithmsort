package tree;

public class Main0563二叉树的坡度 {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		TreeNode node1 = new TreeNode(2);
		TreeNode node2 = new TreeNode(3);
		TreeNode node3 = new TreeNode(4);
		TreeNode node4 = new TreeNode(5);
		TreeNode node5 = new TreeNode(6);
		TreeNode node6 = new TreeNode(7);
		root.left = node1;
		root.right = node2;
		node1.left = node3;
		node1.right = node4;
		node2.left = node5;
		node2.right = node6;
		int tilt = new Solution563().findTilt(root);
		System.out.println(tilt);
	}
}

// 该节点左子树的结点之和和右子树结点之和的差的绝对值。
class Solution563 {
	int ans = 0;

	public int findTilt(TreeNode root) {
		height(root);
		return ans;
	}

	public int height(TreeNode root) {
		if (root == null)
			return 0;
		int left = height(root.left);
		int right = height(root.right);
		ans += Math.abs(left - right);
		return left + right + root.val;
	}
}
