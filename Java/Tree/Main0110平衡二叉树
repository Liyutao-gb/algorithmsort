package tree;

// 110平衡二叉树、958验证完全二叉树、98验证二叉搜索树、965单值二叉树
public class Main0110平衡二叉树 {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		TreeNode node1 = new TreeNode(2);
		TreeNode node2 = new TreeNode(3);
		TreeNode node3 = new TreeNode(4);
		root.left = node1;
		root.right = node2;
		node1.left = node3;
		boolean b = new Solution110().isBalanced(root);
		System.out.println(b);
	}
}

// 平衡二叉树：① 空树; ② 每个节点 的左右两个子树的高度差的绝对值不超过1
class Solution110 {
	boolean ans = true;
	
	public boolean isBalanced(TreeNode root){
		height(root);
		return ans;
	}
	
	public int height(TreeNode root){
		if(root == null)
			return 0;
		int left = height(root.left);
		int right = height(root.right);
		if(Math.abs(left - right) > 1)
			ans = false;
		return Math.max(left, right) + 1;
	}
}
