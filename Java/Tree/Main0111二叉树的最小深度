package tree;

public class Main0111二叉树的最小深度 {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		TreeNode node1 = new TreeNode(2);
		root.left = node1;
		int depth = new Solution111().minDepth(root);
		System.out.println(depth);
	}
}

// 最小深度:从根节点到最近叶子节点的最短路径上的节点数量。
class Solution111 {
	public int minDepth(TreeNode root) {
		if (root == null)
			return 0;
		if (root.left == null)
			return minDepth(root.right) + 1;
		if (root.right == null)
			return minDepth(root.left) + 1;
		return Math.min(minDepth(root.left), minDepth(root.right)) + 1;
	}
}
