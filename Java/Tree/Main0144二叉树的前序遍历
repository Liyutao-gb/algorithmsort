package tree;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

// 迭代
class Solution0144 {
	public List<Integer> preorderTraversal(TreeNode root) {
		List<Integer> output = new ArrayList<>();
		if (root == null)
			return output;
		
		Stack<TreeNode> stack = new Stack<>();
		TreeNode cur = root;
		while (cur != null || !stack.isEmpty()) {
			while (cur != null) {
				output.add(cur.val);
				stack.push(cur);
				cur = cur.left;
			}
			cur = stack.pop();
			cur = cur.right;
		}
		return output;
	}
}

// 递归
class Solution144 {
	public List<Integer> preorderTraversal(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		preorderTraversal(root, list);
		return list;
	}

	public void preorderTraversal(TreeNode root, List<Integer> list) {
		if (root == null)
			return;
		list.add(root.val);
		preorderTraversal(root.left, list);
		preorderTraversal(root.right, list);
	}
}
