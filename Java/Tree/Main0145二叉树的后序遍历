package tree;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

class Solution145 {
	public List<Integer> postorderTraversal(TreeNode root) {
		List<Integer> output = new ArrayList<>();
		if (root == null)
			return output;

		Stack<TreeNode> stack = new Stack<>();
		stack.push(root);
		while (!stack.isEmpty()) {
			TreeNode cur = stack.pop();
			output.add(0, cur.val);
			if (cur.left != null)
				stack.push(cur.left);
			if (cur.right != null)
				stack.push(cur.right);
		}
		return output;
	}
}

class Solution0145 {
	public List<Integer> postorderTraversal(TreeNode root) {
		List<Integer> list = new ArrayList<>();
		postorderTraversal(root, list);
		return list;
	}

	public void postorderTraversal(TreeNode root, List<Integer> list) {
		if (root == null)
			return;
		postorderTraversal(root.left, list);
		list.add(root.val);
		postorderTraversal(root.right, list);
	}
}
