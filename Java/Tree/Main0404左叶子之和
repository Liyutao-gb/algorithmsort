package tree;

import java.util.LinkedList;
import java.util.Queue;

public class Main0404左叶子之和 {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(1);
		TreeNode node1 = new TreeNode(2);
		TreeNode node2 = new TreeNode(3);
		TreeNode node3 = new TreeNode(4);
		TreeNode node4 = new TreeNode(5);
		root.left = node1;
		root.right = node2;
		node1.left = node3;
		node1.right = node4;
		int sumOfLeftLeaves = new Solution404().sumOfLeftLeaves(root);
		System.out.println(sumOfLeftLeaves);
	}
}

// 左叶子条件
class Solution404 {
	int sum = 0;

	public int sumOfLeftLeaves(TreeNode root) {
		if (root == null)
			return sum;
		
		if (root.left != null && root.left.left == null && root.left.right == null)
			sum += root.left.val;
		sumOfLeftLeaves(root.left);
		sumOfLeftLeaves(root.right);
		return sum;
	}
}

class Solution0404 {
	public int sumOfLeftLeaves(TreeNode root) {
		if (root == null)
			return 0;
		Queue<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		int sum = 0;
		while (!queue.isEmpty()) {
			TreeNode cur = queue.poll();
			if (cur.left != null && cur.left.left == null && cur.left.right == null)
				sum += cur.left.val;
			if (cur.left != null)
				queue.add(cur.left);
			if (cur.right != null)
				queue.add(cur.right);
		}
		return sum;
	}
}
