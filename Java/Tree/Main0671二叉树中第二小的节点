package tree;

public class Main0671二叉树中第二小的节点 {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(2);
		TreeNode node1 = new TreeNode(2);
		TreeNode node2 = new TreeNode(2147483647);
		root.left = node1;
		root.right = node2;
		int value = new Solution671().findSecondMinimumValue(root);
		System.out.println(value);
	}
}

class Solution671 {
	int first = Integer.MAX_VALUE, second = Integer.MAX_VALUE;
	int count = 0;

	public int findSecondMinimumValue(TreeNode root) {
		preOrder(root);
		return count == 0 ? -1 : second;
	}

	public void preOrder(TreeNode root) {
		if (root == null)
			return;
		
		if (root.val < first) {
			second = first;
			first = root.val;
		} else if (root.val > first && root.val <= second) {
			count++;
			second = root.val;
		}
		preOrder(root.left);
		preOrder(root.right);
	}
}
