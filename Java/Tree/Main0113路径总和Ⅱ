package tree;

import java.util.ArrayList;
import java.util.List;

public class Main0113路径总和Ⅱ {
	public static void main(String[] args) {
		TreeNode root = new TreeNode(5);
		TreeNode node1 = new TreeNode(4);
		TreeNode node2 = new TreeNode(8);
		TreeNode node3 = new TreeNode(11);
		TreeNode node5 = new TreeNode(4);
		TreeNode node7 = new TreeNode(2);
		TreeNode node8 = new TreeNode(5);
		root.left = node1;
		root.right = node2;
		node1.left = node3;
		node2.right = node5;
		node3.right = node7;
		node5.left = node8;
		List<List<Integer>> list = new Solution113().pathSum(root, 22);
		System.out.println(list);
	}
}

class Solution113 {
	List<List<Integer>> output = new ArrayList<>();

	public List<List<Integer>> pathSum(TreeNode root, int sum) {
		helper(root, sum, new ArrayList<>());
		return output;
	}

	public void helper(TreeNode root, int sum, List<Integer> list) {
		if (root == null)
			return;
		list.add(root.val);
		if (root.left == null && root.right == null && sum - root.val == 0)
			output.add(new ArrayList<>(list));
		helper(root.left, sum - root.val, list);
		helper(root.right, sum - root.val, list);
		list.remove(list.size() - 1);
	}
}
